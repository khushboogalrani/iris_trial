name: AskNEU CI/CD Pipeline

on:
  workflow_run:
    workflows: ["Validation and Bias Check Pipeline"]
    types:
      - completed

jobs:
  deploy_to_cloud_run:
    runs-on: ubuntu-latest
    
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
          
      - name: Build Docker image
        run: |
          docker build -t askneu-chatbot:${{ github.sha }} .
          
      - name: Push to Artifact Registry
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo $GCP_SA_KEY > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $GCP_PROJECT_ID
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker tag askneu-chatbot:${{ github.sha }} us-central1-docker.pkg.dev/$GCP_PROJECT_ID/askneu-repo/askneu-chatbot:${{ github.sha }}
          docker tag askneu-chatbot:${{ github.sha }} us-central1-docker.pkg.dev/$GCP_PROJECT_ID/askneu-repo/askneu-chatbot:latest
          docker push us-central1-docker.pkg.dev/$GCP_PROJECT_ID/askneu-repo/askneu-chatbot:${{ github.sha }}
          docker push us-central1-docker.pkg.dev/$GCP_PROJECT_ID/askneu-repo/askneu-chatbot:latest
          
      - name: Deploy to Cloud Run
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          gcloud run deploy askneu-chatbot \
            --image us-central1-docker.pkg.dev/$GCP_PROJECT_ID/askneu-repo/askneu-chatbot:${{ github.sha }} \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars="PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},COHERE_API_KEY=${{ secrets.COHERE_API_KEY }}"
          
      - name: Send email notification
        if: always()
        env:
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}
          JOB_STATUS: ${{ job.status }}
        run: python Modeling Pipeline/Model Evaluation/send_email_oauth2.py
